{"version":3,"sources":["App/data/URI.js","App/redux/middleware.js","App/redux/reducer.js","App/redux/store.js","App/views/Main/Main.action.js","App/components/Alert/Alert.jsx","App/components/AppName/AppName.jsx","App/components/ContactAdd/ContactAdd.action.js","App/components/ContactAdd/ContactAdd.jsx","App/components/ContactShow/ContactShow.action.js","App/components/ContactShow/ContactShow.jsx","App/components/Filter/Filter.action.js","App/components/Filter/Filter.jsx","App/views/Main/Main.jsx","App/views/Registration/Registration.action.js","App/views/Registration/Registration.jsx","App/views/Login/Login.action.js","App/views/Login/Login.jsx","App/components/Header/Header.action.js","App/data/router.js","App/components/Loader/Loader.jsx","App/components/Header/Header.jsx","App/App.jsx","index.js"],"names":["URI","server","postman","store","next","action","type","payload","contacts","length","console","log","getState","userId","fetch","method","headers","body","JSON","stringify","marker","sessionControl","localStorage","getItem","then","data","reducer","createReducer","filter","loader","userName","ADD","state","DEL","FILTER","ALERT","isAlert","alertMessage","LOADER","LOGIN","LOGOUT","configureStore","middleware","getDefaultMiddleware","ave","createAction","Alert","className","this","props","text","Component","AppName","add","id","name","number","map","el","toLowerCase","includes","alert","ContactAdd","valueName","valueNumder","delayToCloseAlert","handleChange","event","target","setState","value","handleSubmit","preventDefault","objOut","v4","action_ADD","action_ALERT","clearTimeout","setTimeout","onSubmit","htmlFor","required","placeholder","autoComplete","onChange","pattern","connect","dispatch","obj","dataOut","idx","forEach","index","newFilters","splice","newContacts","ContactShow","deleteContact","dataset","action_DEL","contactList","indx","CSSTransition","timeout","classNames","data-id","onClick","children","TransitionGroup","component","push","Filter","a","action_FILTER","Main","action_AVE","in","unmountOnExit","appear","boolean","Registration","newUserName","newUserPass","action_LOADER","newUser","pass","respons","json","responsJson","setItem","action_LOGIN","history","pathname","Login","login","router","main","registration","Loader","Header","logOut","textContent","clear","action_LOGOUT","loginLogout","to","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b212043.chunk.js","sourcesContent":["const URI = {\n  server: 'https://llex.one/api/'\n}\nexport default URI","import URI from '../data/URI';\n\nconst postman = (store) => (next) => (action) => {\n  // console.log(action);\n  if (action.type === \"AVE\") {\n  //   fetch(`{URI}`)\n  //     .then((data) => data.json())\n  //     .then((json) => {\n  //       action = {\n  //         type: \"ADD\",\n  //         payload: {\n  //           contacts: [...json],\n  //         },\n  //       };\n  //       next(action);\n  //     });\n  } else if (action.type === \"ADD\" && action.payload.contacts.length) {\n    console.log(store.getState().userId);\n    fetch(`${URI.server}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        marker: 'add',\n        userId: store.getState().userId,\n        sessionControl: localStorage.getItem('sessionControl'),\n        contacts: [...action.payload.contacts]\n      }),\n    }).then((data)=> {\n      console.log(data);\n    })\n    .then(next(action));\n  // } else if (action.type === \"DEL\"){\n  //   fetch(`{URI}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ marker: 'del', id: action.payload.id}),\n  //   })\n  //   .then(next(action));\n  } else {\n    next(action);\n  }\n};\n\nexport default postman\n","import { createReducer } from \"@reduxjs/toolkit\";\nconst initState = {\n  contacts: [],\n  filter: [],\n  userId: \"\",\n  loader: false,\n  userName: \"Guest\",\n};\n\n// const reducer = (state = initState, { type, payload }) => {\n//   switch (type) {\n//     case \"ADD\":\n//       return { ...state, contacts: [...state.contacts, ...payload.contacts] };\n//     case \"DEL\":\n//       return {\n//         ...state,\n//         contacts: [...payload.contacts],\n//         filter: [...payload.filter],\n//       };\n//     case \"FILTER\":\n//       return {\n//         ...state,\n//         filter: [...payload.filter],\n//       };\n//     case \"ALERT\":\n//       return {\n//         ...state,\n//         isAlert: payload.isAlert,\n//         alertMessage: payload.alertMessage,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nconst reducer = createReducer(initState, {\n  ADD: (state, { payload }) => ({\n    ...state,\n    contacts: [...state.contacts, ...payload.contacts],\n  }),\n  DEL: (state, { payload }) => ({\n    ...state,\n    contacts: [...payload.contacts],\n    filter: [...payload.filter],\n  }),\n  FILTER: (state, { payload }) => ({\n    ...state,\n    filter: [...payload.filter],\n  }),\n  ALERT: (state, { payload }) => ({\n    ...state,\n    isAlert: payload.isAlert,\n    alertMessage: payload.alertMessage,\n  }),\n  LOADER: (state, { payload }) => ({\n    ...state,\n    loader: payload.loader,\n  }),\n  LOGIN: (state, { payload }) => ({\n    ...state,\n    userName: payload.userName,\n    userId: payload.userId,\n    contacts: [...payload.contacts],\n  }),\n  LOGOUT: (state, { payload }) => ({\n    ...state,\n    contacts: [],\n    filter: [],\n    userId: \"\",\n    loader: false,\n    userName: \"Guest\",\n  }),\n});\n\nexport default reducer;\n","// import { createStore } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport postman from './middleware';\n\n//reducers\nimport reducer from \"./reducer\";\n\n// const store = createStore(\n//   reducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\nconst store = configureStore({\n  reducer,\n  middleware: [...getDefaultMiddleware(), postman]\n})\n\nexport default store;","import { createAction } from \"@reduxjs/toolkit\";\n\n// const localStorage = (contacts) => {\n//   return {\n//     type: \"ADD\",\n//     payload: {\n//       contacts: contacts\n//     }\n//   }\n// }\nconst ave = createAction(\"AVE\");\n\nexport default { ave };\n","import React, { Component } from \"react\";\n\nimport \"./Alert.css\";\n\nclass Alert extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"alert\">\n        <p className=\"alert-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from 'react';\n\nimport './AppName.css';\n\nclass AppName extends Component {\n  state = {  }\n  render() { \n    return ( \n          <p className=\"AppName\">Phonebook</p>\n     );\n  }\n}\n \nexport default AppName;","import { createAction } from \"@reduxjs/toolkit\";\n\nconst add = (state, { id, name, number }) => {\n  if (\n    name &&\n    !state.contacts\n      .map((el) => el.name.toLowerCase())\n      .includes(name.toLowerCase())\n  ) {\n    return {\n      type: \"ADD\",\n      payload: {\n        contacts: [{ id, name, number }],\n      },\n    };\n  } else {\n    return {\n      type: \"ADD\",\n      payload: {\n        contacts: [],\n      },\n    };\n  }\n};\n\n// const alert = ({ isAlert, alertMessage }) => {\n//   return {\n//     type: \"ALERT\",\n//     payload: {\n//       isAlert,\n//       alertMessage,\n//     },\n//   };\n// };\nconst alert = createAction(\"ALERT\", ({ isAlert, alertMessage }) => ({\n  payload: {\n    isAlert,\n    alertMessage,\n  },\n}));\n\nexport default { add, alert };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport action from \"./ContactAdd.action\";\nimport { v4 } from \"uuid\";\n\nimport './ContactAdd.css';\n\nclass ContactAdd extends Component {\n  state = {\n    valueName: \"\",\n    valueNumder: \"\",\n  };\n  delayToCloseAlert = null;\n\n  handleChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        this.setState((state) => {\n          return {\n            valueName: event.target.value,\n          };\n        });\n        break;\n      case \"number\":\n        this.setState((state) => {\n          return {\n            valueNumder: event.target.value,\n          };\n        });\n        break;\n      default:\n        console.log(\"error form-name\");\n    }\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const objOut = {\n      id: v4(),\n      name: this.state.valueName,\n      number: this.state.valueNumder,\n    };\n    this.props.action_ADD(this.props.state, objOut);\n\n    if (\n      objOut.name &&\n      this.props.state.contacts\n        .map((el) => el.name.toLowerCase())\n        .includes(objOut.name.toLowerCase())\n    ) {\n      this.props.action_ALERT({\n        isAlert: true,\n        alertMessage: \"Sorry, but You already have this contact in your base.\",\n      });\n      clearTimeout(this.delayToCloseAlert);\n      this.delayToCloseAlert = setTimeout(() => {\n        this.props.action_ALERT({\n          isAlert: false,\n          alertMessage: \"\",\n        });\n      }, 3000);\n    }\n\n    this.setState((state) => {\n      return {\n        valueName: \"\",\n        valueNumder: \"\",\n      };\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"form contactAdd\" onSubmit={this.handleSubmit}>\n        <label className=\"label\" htmlFor=\"name\">\n          Contact Name\n        </label>\n        <input\n          required\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"name\"\n          autoComplete=\"off\"\n          value={this.state.valueName}\n          onChange={this.handleChange}\n        />\n        <label className=\"label\" htmlFor=\"number\">\n          Contact Number\n        </label>\n        <input\n          className=\"input\"\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          placeholder=\"063-333-4444\"\n          autoComplete=\"off\"\n          pattern=\"[0-9\\W]*\"\n          value={this.state.valueNumder}\n          onChange={this.handleChange}\n        />\n        <button className=\"btn\" type=\"submit\">\n          new contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_ADD: (state, obj) => {\n      dispatch(action.add(state, obj));\n    },\n    action_ALERT: (obj) => {\n      dispatch(action.alert(obj));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactAdd);\n","const del = (state, { id }) => {\n  const dataOut = {\n    type: 'DEL',\n    payload: {\n      contacts: [],\n      filter: [],\n      id: id\n    }\n  };\n  if (state.filter.length) {\n    let idx = 0;\n    state.filter.forEach((el, index) => {\n      if (el.id === id) {\n        idx = index;\n      }\n    });\n    const newFilters = [...state.filter];\n    newFilters.splice(idx, 1);\n    dataOut.payload.filter = [...newFilters];\n  }\n\n  let idx = 0;\n  state.contacts.forEach((el, index) => {\n    if (el.id === id) {\n      idx = index;\n    }\n  });\n  const newContacts = [...state.contacts];\n  newContacts.splice(idx, 1);\n  dataOut.payload.contacts = [...newContacts];\n  return dataOut;\n};\n\nexport default { del };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport action from \"./ContactShow.action\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"./ContactShow.css\";\n\nclass ContactShow extends Component {\n  state = {};\n\n  deleteContact = (event) => {\n    const id = event.target.dataset.id;\n    this.props.action_DEL(this.props.state, { id: id });\n  };\n\n  componentDidUpdate() {\n    this.contactList();\n  }\n\n  contactList = () => {\n    let show = null;\n    if (this.props.state.filter.length) {\n      show = this.props.state.filter;\n    } else {\n      show = this.props.state.contacts;\n    }\n    return show.map((el, indx) => {\n      return (\n        <CSSTransition\n          key={indx}\n          timeout={250}\n          classNames=\"contact-show-list-item\"\n        >\n          <li key={el.id} className=\"contact-show-list-item\">\n            <p className=\"contact-show-list-text\">\n              <span>{el.name}</span>\n              <span>{el.number}</span>\n            </p>\n            <button data-id={el.id} onClick={this.deleteContact}>\n              delete\n            </button>\n          </li>\n        </CSSTransition>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"contact-show\">\n        {this.props.children}\n        <TransitionGroup component=\"ul\" className=\".contact-show-list\">\n          {this.contactList()}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_DEL: (state, id)=> {dispatch(action.del(state, id))},\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactShow);\n","const filter = (state, { name }) => {\n  let filter = [];\n  if (name) {\n    state.contacts.forEach((el) => {\n      if (el.name.toLowerCase().includes(name.toLowerCase())) {\n        filter.push(el);\n      }\n    });\n  } else {\n    filter = [];\n  }\n  return {\n    type: \"FILTER\",\n    payload: { filter: filter },\n  };\n};\n\nexport default { filter };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport action from './Filter.action';\n\nimport \"./Filter.css\";\n\nclass Filter extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChange = async (event) => {\n    await this.setState((state) => {\n      return {\n        value: event.target.value,\n      };\n    })\n    this.props.action_FILTER(this.props.state, { name: this.state.value })\n  };\n\n  render() {\n    return (\n      <div className=\"filter\">\n        <label htmlFor=\"filter\">Filter</label>\n        <input\n          id=\"filter\"\n          type=\"text\"\n          name=\"filter\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state)=>{\n  return {\n    state:state\n  }\n}\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    action_FILTER: (state,name)=>{dispatch(action.filter(state,name))}\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component, Fragment } from \"react\";\nimport action from \"./Main.action\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\n//jsx module\nimport Alert from \"../../components/Alert\";\nimport AppName from \"../../components/AppName\";\nimport ContactAdd from \"../../components/ContactAdd\";\nimport ContactShow from \"../../components/ContactShow\";\nimport Filter from \"../../components/Filter\";\n\n//style\nimport \"./Main.css\";\n\nclass Main extends Component {\n\n  delayToCloseAlert = null;\n\n  componentDidMount() {\n      this.props.action_AVE()\n  }\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n        \n        <Fragment>\n          <CSSTransition\n            in={this.props.state.isAlert}\n            classNames=\"alert\"\n            timeout={250}\n            unmountOnExit\n          >\n            <Alert text={this.props.state.alertMessage} />\n          </CSSTransition>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames=\"AppName\"\n            timeout={500}\n            unmountOnExit\n          >\n            <AppName />\n          </CSSTransition>\n          <CSSTransition\n            in={!!this.props.state.userId}\n            classNames=\"contactAdd\"\n            timeout={400}\n            unmountOnExit>\n            <ContactAdd />\n          </CSSTransition>\n          <ContactShow>\n            <CSSTransition\n              in={this.props.state.contacts.length > 1}\n              classNames=\"filter\"\n              timeout={250}\n              unmountOnExit\n            >\n              <Filter />\n            </CSSTransition>\n          </ContactShow>\n        </Fragment>\n      \n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_AVE: (contacts) => {dispatch(action.ave(contacts))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","const loader = (boolean) => {\n  return {\n    type: \"LOADER\",\n    payload: {\n      loader: boolean\n    }\n  }\n}\nconst logIn = ({userName, userId, contacts = []}) => {\n  return {\n    type: 'LOGIN',\n    payload: {\n      userName: userName,\n      userId: userId,\n      contacts: [...contacts]\n    }\n  }\n}\nexport default {loader, logIn}\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport action from './Registration.action';\nimport URI from '../../data/URI';\n\nimport \"./Registration.css\";\n\nclass Registration extends Component {\n  state = {\n    newUserName: \"\",\n    newUserPass: \"\",\n    // messageFromServer: \"\",  //! ____ДЛЯ ДОДАТКОВОГО ОПОВІЩЕННЯ КОРОСТУВАЧА____\n  };\n\n  handleChange = (event) => {\n    if (event.target.name === \"newUserName\") {\n      this.setState((state) => {\n        return {\n          newUserName: event.target.value,\n        };\n      });\n    }\n    if (event.target.name === \"newUserPass\") {\n      this.setState((state) => {\n        return {\n          newUserPass: event.target.value,\n        };\n      });\n    }\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.props.action_LOADER(true);\n    const newUser = {\n      name: this.state.newUserName,\n      pass: this.state.newUserPass,\n      marker: 'newuser'\n    }\n\n    const respons = await fetch(`${URI.server}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newUser),\n    })\n    const responsJson = await respons.json()\n    localStorage.setItem('sessionControl', responsJson.sessionControl);\n    this.props.action_LOGIN({\n      userName: responsJson.userName,\n      userId: responsJson.userId,\n    })\n\n    console.log(responsJson);\n\n  \n    \n    \n    \n    this.props.action_LOADER(false);\n    this.setState((state) => {\n      return {\n        newUserName: \"\",\n        newUserPass: \"\"\n      };\n    });\n    this.props.history.push({\n      pathname: '/',\n    });\n  };\n  \n  \n  render() {\n    return (\n      <Fragment>\n        <CSSTransition\n            in={true}\n            appear={true}\n            classNames=\"AppName\"\n            timeout={500}\n            unmountOnExit\n          >\n          <p className=\"registrationTitle\">\n            Hi, let's add your info in our base:\n          </p>\n        </CSSTransition>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"newUserName\" className=\"label\">\n            Your nickname:\n          </label>\n          <input\n            type=\"text\"\n            name=\"newUserName\"\n            id=\"newUserName\"\n            autoComplete=\"off\"\n            className=\"input\"\n            onChange={this.handleChange}\n            value={this.state.newUserName}\n          />\n          <label htmlFor=\"newUserName\" className=\"label\">\n            Your password:\n          </label>\n          <input\n            type=\"password\"\n            name=\"newUserPass\"\n            id=\"newUserPass\"\n            autoComplete=\"off\"\n            className=\"input\"\n            onChange={this.handleChange}\n            value={this.state.newUserPass}\n          />\n          <button className=\"btn\" type=\"submit\">\n            ок\n          </button>\n        </form>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_LOADER: (boolean) => {\n      dispatch(action.loader(boolean))\n    },\n    action_LOGIN: (obj) => {\n      dispatch(action.logIn(obj))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\n","const loader = (boolean) => {\n  return {\n    type: \"LOADER\",\n    payload: {\n      loader: boolean\n    }\n  }\n}\nconst logIn = ({userName, userId, contacts = []}) => {\n  return {\n    type: 'LOGIN',\n    payload: {\n      userName: userName,\n      userId: userId,\n      contacts: [...contacts]\n    }\n  }\n}\nexport default {loader, logIn}\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport action from \"./Login.action\";\nimport URI from \"../../data/URI\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  state = {\n    newUserName: \"\",\n    newUserPass: \"\",\n    // messageFromServer: \"\",  //! ____ДЛЯ ДОДАТКОВОГО ОПОВІЩЕННЯ КОРОСТУВАЧА____\n  };\n\n  handleChange = (event) => {\n    if (event.target.name === \"newUserName\") {\n      this.setState((state) => {\n        return {\n          newUserName: event.target.value,\n        };\n      });\n    }\n    if (event.target.name === \"newUserPass\") {\n      this.setState((state) => {\n        return {\n          newUserPass: event.target.value,\n        };\n      });\n    }\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.props.action_LOADER(true);\n    const login = {\n      name: this.state.newUserName,\n      pass: this.state.newUserPass,\n      marker: \"login\",\n    };\n\n    const respons = await fetch(`${URI.server}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(login),\n    });\n    const responsJson = await respons.json();\n    if (responsJson.userId) {\n      localStorage.setItem(\"sessionControl\", responsJson.sessionControl);\n      this.props.action_LOGIN({\n        userName: responsJson.userName,\n        userId: responsJson.userId,\n        contacts: responsJson.contacts,\n      });\n    } else {\n      console.log(\"НЕ ВІРНИЙ ЛОГІН/ПАРОЛЬ\");\n    }\n\n    this.props.action_LOADER(false);\n    this.setState((state) => {\n      return {\n        newUserName: \"\",\n        newUserPass: \"\",\n      };\n    });\n    this.props.history.push({\n      pathname: \"/\",\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"AppName\"\n          timeout={500}\n          unmountOnExit\n        >\n          <p className=\"loginTitle\">Login:</p>\n        </CSSTransition>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"newUserName\" className=\"label\">\n            Your nickname:\n          </label>\n          <input\n            type=\"text\"\n            name=\"newUserName\"\n            id=\"newUserName\"\n            autoComplete=\"off\"\n            className=\"input\"\n            onChange={this.handleChange}\n            value={this.state.newUserName}\n          />\n          <label htmlFor=\"newUserName\" className=\"label\">\n            Your password:\n          </label>\n          <input\n            type=\"password\"\n            name=\"newUserPass\"\n            id=\"newUserPass\"\n            autoComplete=\"off\"\n            className=\"input\"\n            onChange={this.handleChange}\n            value={this.state.newUserPass}\n          />\n          <button className=\"btn\" type=\"submit\">\n            ок\n          </button>\n        </form>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_LOADER: (boolean) => {\n      dispatch(action.loader(boolean));\n    },\n    action_LOGIN: (obj) => {\n      dispatch(action.logIn(obj));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const logOut = (value) => {\n  return {\n    type: 'LOGOUT',\n    payload: {\n      value\n    }\n  }\n}\nexport default {logOut}","const router = {\n  main: '/',\n  registration: '/registration',\n  login: '/login'\n}\n\nexport default router;","import React from \"react\";\n\nimport \"./Loader.css\";\n\nfunction Loader() {\n  return (\n    <div className=\"loaderBlock\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport action from './Header.action';\n\n//router\nimport router from \"../../data/router\";\n\n//jsx module\nimport Loader from \"../Loader\";\n\nimport \"./Header.css\";\n\nclass Header extends Component {\n  state = {\n  };\n\n\n  logOut = (event) => {\n    if(event.target.textContent === 'Logout'){\n      localStorage.clear();\n      this.props.action_LOGOUT();\n    };\n  }\n\n\n\n  render() {\n\n    //!  ____ВИПРАВИТИ ЦІ КОСТИЛІ ____\n\n    let loginLogout = 'Login';\n    let registration = 'Registration';\n    if(this.props.state.userId) {\n      loginLogout = \"Logout\"\n      registration = ''\n    }\n\n    //!  ______________________________\n\n    return (\n      <header className=\"header\">\n        <div className=\"header-container\">\n          <Link to={router.main}>\n            <span>{this.props.state.userName}</span>\n          </Link>\n          <div className=\"login-block\">\n            <Link to={router.registration} className=\"registration-link\">\n              {registration}\n            </Link>\n            <Link to={router.login} onClick={this.logOut}>{loginLogout}</Link>\n          </div>\n        </div>\n        <CSSTransition\n          in={this.props.state.loader}\n          timeout={250}\n          classNames=\"loader\"\n          unmountOnExit\n        >\n          <Loader />\n        </CSSTransition>\n      </header>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action_LOGOUT: (value) => {\n      dispatch(action.logOut(value))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component, Fragment, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import { CSSTransition } from \"react-transition-group\";\n\n//views\nimport Main from './views/Main';\nimport Registration from './views/Registration';\nimport Login from './views/Login';\n\n//jsx components\nimport Header from './components/Header';\n\n//router\nimport router from './data/router';\n\n//style\nimport \"./App.css\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <Header/>\n        <div className='container'>\n        <Switch>\n          <Suspense fallback={<h2>Loading...</h2>}>\n            <Route path={router.main} exact component={Main}/>\n            <Route path={router.registration} exact component={Registration}/> \n            <Route path={router.login} exact component={Login}/> \n          </Suspense>\n        </Switch>\n        </div>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // action_AVE: (contacts) => {dispatch(action.ave(contacts))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./App/redux/store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}